'use strict';

const btn = document.querySelector('.btn-country');
const countriesContainer = document.querySelector('.countries');

const displayCountry = function (data, className = '') {
  const currensies = data.currencies;
  const currensyName = Object.values(currensies)[0].name;
  const currensySymbol = Object.values(currensies)[0].symbol;

  const nativeName = data.name.nativeName;
  const officialName = Object.values(nativeName)[0].official;

  // –¢–∞–∫—É—é —à—Ç—É–∫—É —Å data.languages —è —Å–¥–µ–ª–∞–ª –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —É —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∑—ã–∫–æ–≤(–Ω–∞–ø—Ä, –ö–∞–Ω–∞–¥–∞)
  const html = `<article class="country ${className}">
<img class="country__img" src="${data.flags.svg}" />
<div class="country__data">
<h3 class="country__name">${officialName}</h3>
<h4 class="country__region">${data.region}</h4>
<p class="country__row"><span>üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>${(data.population / 1000000).toFixed(
    1
  )} millions</p>
<p class="country__row"><span>üó£Ô∏è</span>${[
    ...Object.values(data.languages),
  ].join(', ')}</p>
<p class="country__row"><span>üí∞</span>${currensySymbol} ${currensyName}</p>
</div>
</article>`;
  countriesContainer.insertAdjacentHTML('beforeend', html);
  countriesContainer.style.opacity = 1;
};

// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω
const displayError = function (message) {
  countriesContainer.insertAdjacentText('beforeend', message);
  // countriesContainer.style.opacity = 1;
};

//////////////////////////////////////////////////////
// const getCountryData = function (countryName) {
//   // Old method
//   const request = new XMLHttpRequest();
//   // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
//   request.open('GET', `https://restcountries.com/v3.1/name/${countryName}`);

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å GET –ø–æ url. –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ(—Ç.–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
//   request.send();

//   // –ö–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã, —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π(eventListener)
//   request.addEventListener('load', function () {
//     // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞, —Ç–∞–∫ –∫–∞–∫ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ this.responseText - —ç—Ç–æ JSON-—Å—Ç—Ä–æ–∫–∞, –Ω–∞—Ö–æ–¥—è—â–∞—è—Å—è –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞
//     const [data] = JSON.parse(this.responseText);
//     console.log(data);

//     const currensies = data.currencies;
//     const currensyName = Object.values(currensies)[0].name;
//     const currensySymbol = Object.values(currensies)[0].symbol;

//     const nativeName = data.name.nativeName;
//     const officialName = Object.values(nativeName)[0].official;

//     // –¢–∞–∫—É—é —à—Ç—É–∫—É —Å data.languages —è —Å–¥–µ–ª–∞–ª –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —É —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∑—ã–∫–æ–≤(–Ω–∞–ø—Ä, –ö–∞–Ω–∞–¥–∞)
//     const html = `<article class="country">
//   <img class="country__img" src="${data.flags.svg}" />
//   <div class="country__data">
//     <h3 class="country__name">${officialName}</h3>
//     <h4 class="country__region">${data.region}</h4>
//     <p class="country__row"><span>üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>${(
//       data.population / 1000000
//     ).toFixed(1)} millions</p>
//     <p class="country__row"><span>üó£Ô∏è</span>${[
//       ...Object.values(data.languages),
//     ].join(', ')}</p>
//     <p class="country__row"><span>üí∞</span>${currensySymbol} ${currensyName}</p>
//   </div>
// </article>`;
//     countriesContainer.insertAdjacentHTML('beforeend', html);
//     countriesContainer.style.opacity = 1;
//   });
// };

const getCountryAndBorderCountries = function (countryName) {
  // –í—ã–∑–æ–≤ AJAX –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∞–Ω–µ—ã
  // Old method
  const request1 = new XMLHttpRequest();
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
  request1.open('GET', `https://restcountries.com/v3.1/name/${countryName}`);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å GET –ø–æ url. –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ(—Ç.–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
  request1.send();

  // –ö–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã, —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π(eventListener)
  request1.addEventListener('load', function () {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞, —Ç–∞–∫ –∫–∞–∫ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ this.responseText - —ç—Ç–æ JSON-—Å—Ç—Ä–æ–∫–∞, –Ω–∞—Ö–æ–¥—è—â–∞—è—Å—è –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞
    const [data1] = JSON.parse(this.responseText);
    console.log(data1);

    //–û—Ç–æ–±—Ä–∞–¥–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    displayCountry(data1);

    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Å–æ—Å–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω—É
    const [firstHeighbour] = data1.borders;

    if (!firstHeighbour) return;

    // –í—ã–∑–æ–≤ AJAX –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ—Å–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–µ
    const request2 = new XMLHttpRequest();
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
    request2.open(
      'GET',
      `https://restcountries.com/v3.1/alpha/${firstHeighbour}`
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å GET –ø–æ url. –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ(—Ç.–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
    request2.send();

    request2.addEventListener('load', function () {
      const [data2] = JSON.parse(this.responseText);
      console.log(data2);
      displayCountry(data2, 'neighbour');
    });
  });
};
// –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∞–º–∏ –º–æ–≥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤ —Ä–∞–∑–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –≠—Ç–æ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è. –£ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –ø–µ—Ä–≤–µ–µ –ø—Ä–∏—à—ë–ª –∑–∞–ø—Ä–æ—Å, —Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –∏ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –ø–µ—Ä–≤–æ–π

// getCountryAndBorderCountries('Russia');

// !!!! –ï—â—ë —Ä–∞–∑ –ø–æ–≤—Ç–æ—Ä—é - —ç—Ç–æ —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ !!!!
// const request = new XMLHttpRequest();
// //   // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
// //   request.open('GET', `https://restcountries.com/v3.1/name/${countryName}`);

// //   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å GET –ø–æ url. –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ(—Ç.–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
// //   request.send();

// new method

const getDataAndConvertToJSON = function (
  url,
  errorMessage = '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.'
) {
  return fetch(url).then(response => {
    if (!response.ok)
      throw new Error(`${errorMessage} –û—à–∏–±–∫–∞ ${response.status}`);
    return response.json();
  });
};

// const getCountryData = function (countryName) {
//   // –¢–∞–∫–æ–π –≤—ã–∑–æ–≤ —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–º promice, –∏ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è(pendind), –ø–æ—Ç–æ–º—É —á—Ç–æ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª–∏—Ç—Å—è –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
//   // –ø–æ—Ç–æ–º, –∫–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞, promice –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –†–µ—à–µ–Ω–æ(–ª–∏–±–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, –ª–∏–±–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ). –ü–æ —Å—É—Ç–∏, –æ—Ç–∫–ª–æ–Ω–∏—Ç—å—Å—è –∑–∞–ø—Ä–æ—Å, –≤—ã–∑–≤–∞–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é fetch, –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–∫–ª—é—á–∏–ª—Å—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
//   // –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–º–∏—Å–∞ –º—ã –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ .then(), –≤ –∫–æ—Ç–æ—Ä—É—é –ø–∏—Ö–∞–µ–º –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏—é. –û–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø—Ä–æ–º–∏—Å –ø–µ—Ä–µ–π–¥—ë—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–†–µ—à–µ–Ω–æ"

//   fetch(`https://restcountries.com/v3.1/name/${countryName}`)
//     // –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω. –ê—Ä–≥—É–º–µ–Ω—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–∞ –æ—à–∏–±–∫–∞, –∏–∑-–∑–∞ –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å. –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–π —Ñ—É–Ω—Ü–∏–∏ –Ω–µ –±—É–¥–µ—Ç, —Ç–æ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã–ª–µ–∑–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ –±—ã–ª–∞ "–æ—Ç–ª–æ–≤–ª–µ–Ω–∞", –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤—Ç–æ—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ü–µ–ø–æ—á–∫–∞ –ø—Ä–æ–º–∏—Å–æ–≤ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è(—Ç–æ –µ—Å—Ç—å —Ç–µ –ø—Ä–æ–º–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç –ø–æ—Å–ª–µ –≤ —Ü–µ–ø–æ—á–∫–µ –ø—Ä–æ–º–∏—Å–æ–≤, —É–∂–µ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç)
//     // —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å —É –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–º–∏—Å–∞ –≤—Ç–æ—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –æ—Ç–ª–æ–≤–æ–º –æ—à–∏–±–∫–∏, –º–æ–∂–Ω–æ –≤ –∫–æ–Ω—Ü–µ –Ω–∞–ø–∏—Å–∞—Ç—å .catch(callback)
//     .then(
//       function (response) {
//         // –ß—Ç–æ–±—ã –≤ response —Å—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–∞–¥–æ –≤—ã–∑–≤–∞—Ç—å –¥–ª—è –Ω–µ–≥–æ –º–µ—Ç–æ–¥ .json(), –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ - —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º, —Ç–æ –µ—Å—Ç—å –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å, –ø–æ—ç—Ç–æ–º—É –Ω–∞–º –Ω—É–∂–Ω–æ –µ—â—ë —Ä–∞–∑ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ .then()
//         console.log(response);
//         // –ø—Ä–∏ –ø–æ–º–æ—â–∏ throw –º—ã –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–æ–≤—É—é –æ—à–∏–±–∫—É –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–∞–∫ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ return
//         if (!response.ok)
//           throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –û—à–∏–±–∫–∞ ${response.status}`);

//         // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π promice

//         return response.json();
//       }
//       //,   error => alert(error)
//     )
//     .then(function (data) {
//       // —Ç–µ–ø–µ—Ä—å –º—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω—ã
//       console.log(data);
//       displayCountry(data[0]);
//       // –≤—ã–≤–æ–¥–∏–º —Å–æ—Å–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω—É
//       const firstNeighbour = data[0].borders[0];
//
//       if (!firstNeighbour) return;
//       // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å
//       return fetch(`https://restcountries.com/v3.1/alpha/${firstNeighbour}`);
//     })
//     .then(response => {
//       if (!response.ok)
//         throw new Error(`–£ —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Ç —Å–æ—Å–µ–¥–∞! –û—à–∏–±–∫–∞ ${response.status}`);

//       return response.json();
//     })
//     .then(data => displayCountry(data[0], 'neighbour'))
//     .catch(error => {
//       console.log(`e:`, error);
//       console.log(`mes:`, error.message);
//       console.error(`${error} —Ç—É—Ç –æ—à–∏–±–∫–∞!!`);
//       displayError(`–ß—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å! –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω.`);
//     })
//     // —Ñ—É–Ω–∫—Ü–∏—è –º–µ—Ç–æ–¥–∞ finally —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ–≥–¥–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫–ª–æ–Ω—ë–Ω –ª–∏ –ø—Ä–æ–º–∏—Å –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω
//     .finally(() => {
//       countriesContainer.style.opacity = 1;
//     });
// };

const getCountryData = function (countryName) {
  getDataAndConvertToJSON(
    `https://restcountries.com/v3.1/name/${countryName}`,
    '–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'
  )
    .then(function (data) {
      displayCountry(data[0]);
      if (!data[0].borders) throw new Error('–£ —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Ç —Å–æ—Å–µ–¥–µ–π!');

      const firstNeighbour = data[0].borders[0];
      // if (!firstNeighbour) throw new Error('–£ —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Ç —Å–æ—Å–µ–¥–µ–π!');

      return getDataAndConvertToJSON(
        `https://restcountries.com/v3.1/alpha/${firstNeighbour}`,
        '–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'
      );
    })
    .then(data => displayCountry(data[0], 'neighbour'))
    .catch(error => {
      console.log(`error:`, error);
      console.log(`message:`, error.message);
      console.error(`${error}`);
      displayError(`–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω. ${error.message}`);
    })
    .finally(() => {
      countriesContainer.style.opacity = 1;
    });
};

btn.addEventListener('click', function () {
  getCountryData('japan');
});

// —Ñ—É–Ω–∫—Ü–∏—è displayCountryByGPS –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ç—Ä–∞–Ω—É, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
// lat(latitude) - —à–∏—Ä–æ—Ç–∞; lng(longitude) - –¥–æ–ª–≥–æ—Ç–∞!
// API —Ä–∞–±–æ—Ç–∞–µ—Ç —Å VPN!! –ë–µ–∑ –Ω–µ–≥–æ –±—É–¥–µ—Ç –≤—ã–ª–µ–∑–∞—Ç—å –æ—à–∏–±–∫–∞.
const displayCountryByGPS = function (lat, lng) {
  fetch(
    `https://geocode.xyz/${lat},${lng}?geoit=json&auth=520982546676250361625x14576 `
  )
    .then(response => {
      console.log(response);
      if (!response.ok) throw new Error(`–ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è!`);
      return response.json();
    })
    .then(response => {
      console.log(response);
      if (!response.region)
        throw new Error(`–ü–æ —ç—Ç–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Å—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
      console.log(`You are in ${response.region}`);
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω—É
      getCountryData(response.country);
    })
    .catch(error => {
      console.error(`${error}`);
      displayError(`–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω. ${error.message}`);
    });
};

displayCountryByGPS(35.756, 139.256);
displayCountryByGPS(48.857, 2.358);
displayCountryByGPS(40.708, -74.051);
